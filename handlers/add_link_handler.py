import re
from aiogram import Router, types
from aiogram.enums import ChatAction
from aiogram.filters import Command
from utils.link_parser import extract_metadata

from lexicon.lexicon_ru import LEXICON


add_link_router = Router()

@add_link_router.message(Command("add"))
async def add_link_handler(message: types.Message):
    # –®–∞–≥ 0: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏  
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)
    loading_message = await message.answer("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É...")

    # –û–∂–∏–¥–∞–µ–º: /add <url> #category/subcategory HH:MM, –Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏/–≤—Ä–µ–º–µ–Ω–∏
    parts = message.text.strip().split()
    url = next((p for p in parts if p.startswith('http')), None)
    category = next((p for p in parts if p.startswith('#')), None)
    time_str = next((p for p in parts if re.match(r'^\d{1,2}:\d{2}(?::\d{2})?$', p)), None)

    # –ü–∞—Ä—Å–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    if category:
        cat_parts = category.lstrip('#').split('/')
        topic = cat_parts[0]
        subcategory = cat_parts[1] if len(cat_parts) > 1 else ""
    else:
        topic = "–±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        subcategory = ""

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, summary –∏ source
    if url:
        title, summary, source = await extract_metadata(url)
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ /add")
        return

    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏
    time_display = time_str if time_str else "–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏"

    # Edit the loading message when done
    await loading_message.delete()

    await message.answer(
        f"üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ç–µ–º—É: {topic}/{subcategory or '–±–µ–∑ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}\n"
        f"üîñ {title}\n"
        f"üìù {summary}\n"
        f"üïì –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {time_display}\n"
        f"üåê Source: {source}"
    )

    


